import * as React from "react";
import {
  IPost,
  IAttachment,
  AttachmentType,
  IPhotoAttachment,
  IAudioAttachment,
  IGroup,
  IUser,
  ILikes
} from "../API/objects";
import { Log } from "../logging";
import "./Post.css";

const log = Log("Post");

type TSource = (
  | {
    type: "IUser";
    data: IUser;
  }
  | {
    type: "IGroup";
    data: IGroup;
  })[];

export interface IProps {
  user?: IUser;
  group?: IGroup;
  data: IData;
  sources: TSource;
}

interface IData {
  id: number;
  date: number;
  text: string;
  copy_history?: IData[];
  attachments?: IAttachment[];
  likes: ILikes;
}

class Post extends React.PureComponent<IProps> {
  render() {
    let { data, user, group, sources } = this.props;
    log(`Rendering post #${data.id}`);
    return this.renderPost(data, sources, user, group, false);
  }
  renderPost = (
    post: IData,
    sources: TSource,
    user?: IUser,
    group?: IGroup,
    inner: boolean = false
  ) => {
    let date = new Date(post.date * 1000);
    return (
      <div key={post.id} className={`post${inner ? "-inner" : ""}`}>
        <div className="post-header">
          <img src={user ? user.photo_100 : group ? group.photo_100 : ""} />
          <div className="post-header-author">
            <h1>{`${
              user !== undefined
                ? user.first_name
                : group !== undefined
                  ? group.name
                  : "Unknown Source"
              }${user ? " " + user.last_name : ""}`}</h1>
            <p>{date.toLocaleString()}</p>
          </div>
        </div>
        <div className="post-content">
          {post.text ? <p>{post.text}</p> : null}
          {post.copy_history
            ? post.copy_history.map((repost, i) => {
              return this.renderPost(
                repost,
                sources,
                sources[i].type === "IUser"
                  ? (sources[i].data as IUser)
                  : undefined,
                sources[i].type === "IGroup"
                  ? (sources[i].data as IGroup)
                  : undefined,
                true
              );
            })
            : null}
          {post.attachments ? (
            <div className="post-content-attachments">
              {this.renderAttachments(post.attachments)}
            </div>
          ) : null}
        </div>
        {!inner ? (
          <div className="post-footer">
            <svg
              className={`post-like${post.likes.user_likes ? "s" : ""}`}
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 -70 512.06711 512"
            >
              <path
                d="m503.535156 278.304688c-23.695312.867187-46.949218 6.679687-68.265625 17.066406-24.148437 12.03125-68.265625 68.265625-179.199219 68.265625-4.351562 0-8.617187-.082031-12.800781-.253907-101.546875-4.097656-143.1875-56.492187-166.398437-68.011718-21.316406-10.386719-44.570313-16.199219-68.265625-17.066406 18.964843-3.675782 34.914062-16.4375 42.664062-34.132813-15.820312-.332031-30.980469-6.394531-42.664062-17.066406 33.902343-13.917969 61.03125-40.527344 75.601562-74.15625.429688-.851563.769531-1.707031 1.195313-2.644531 3.910156-9.050782 8.472656-17.808594 13.65625-26.195313l39.933594-40.363281h242.945312c18.714844 19.390625 33.875 41.921875 44.800781 66.558594.425781.9375.765625 1.792968 1.191407 2.644531 14.574218 33.628906 41.703124 60.238281 75.605468 74.15625-11.683594 10.671875-26.84375 16.734375-42.664062 17.066406 7.75 17.695313 23.699218 30.457031 42.664062 34.132813zm0 0"
                className="regular"
              />
              <path
                d="m477.9375 278.304688c-23.695312.867187-46.949219 6.679687-68.265625 17.066406-23.210937 11.519531-64.855469 63.914062-166.402344 68.011718-101.546875-4.097656-143.1875-56.492187-166.398437-68.011718-21.316406-10.386719-44.570313-16.199219-68.265625-17.066406 18.964843-3.675782 34.914062-16.4375 42.664062-34.132813-15.820312-.332031-30.980469-6.394531-42.664062-17.066406 33.902343-13.917969 61.03125-40.527344 75.601562-74.15625.429688-.851563.769531-1.707031 1.195313-2.644531 3.910156-9.050782 8.472656-17.808594 13.65625-26.195313l39.933594-40.363281h217.34375c18.714843 19.390625 33.878906 41.921875 44.800781 66.558594.425781.9375.769531 1.792968 1.195312 2.644531 14.574219 33.628906 41.703125 60.238281 75.605469 74.15625-11.683594 10.671875-26.847656 16.734375-42.667969 17.066406 7.75 17.695313 23.699219 30.457031 42.667969 34.132813zm0 0"
                className="light"
              />
              <path
                d="m207.6875 359.710938c-76.203125-12.96875-110.507812-54.269532-130.816406-64.339844-21.316406-10.386719-44.570313-16.199219-68.265625-17.066406 10.585937-2.507813 20.40625-7.539063 28.628906-14.667969 2.914063-2.570313 5.566406-5.429688 7.910156-8.535157 2.171875-3.324218 4.136719-6.78125 5.878907-10.351562 1.785156-2.628906 3.882812-5.035156 6.246093-7.167969 2.515625-2.632812 5.097657-5.191406 7.746094-7.679687 6.507813-6.199219 13.4375-11.945313 20.738281-17.183594 8.15625-5.964844 17.023438-10.894531 26.394532-14.679688 7.765624-3.1875 16.058593-4.90625 24.457031-5.066406 32.253906 0 59.5625 111.957032 71.082031 166.738282zm0 0"
                className="light"
              />
              <path
                d="m304.453125 359.710938c76.203125-12.96875 110.507813-54.269532 130.816406-64.339844 21.316407-10.386719 44.570313-16.199219 68.265625-17.066406-10.585937-2.507813-20.40625-7.539063-28.628906-14.667969-2.914062-2.570313-5.566406-5.429688-7.910156-8.535157-2.171875-3.324218-4.136719-6.78125-5.878906-10.351562-1.785157-2.628906-3.882813-5.035156-6.246094-7.167969-2.515625-2.632812-5.097656-5.191406-7.75-7.679687-6.503906-6.199219-13.433594-11.945313-20.734375-17.183594-8.15625-5.964844-17.023438-10.894531-26.394531-14.679688-7.765626-3.1875-16.058594-4.90625-24.457032-5.066406-32.253906 0-59.5625 111.957032-71.082031 166.738282zm0 0"
                className="light"
              />
              <path
                d="m367.34375 339.660156c-10.382812 5.078125-21.136719 9.355469-32.167969 12.800782-25.660156 7.660156-52.328125 11.429687-79.105469 11.175781-26.777343.253906-53.445312-3.515625-79.105468-11.175781-11.03125-3.445313-21.785156-7.722657-32.167969-12.800782-32-44.460937-8.191406-104.023437-8.191406-104.023437s34.132812 17.066406 59.730469 0c18.195312-12.085938 38.433593-20.761719 59.734374-25.597657 21.300782 4.835938 41.539063 13.511719 59.734376 25.597657 25.597656 17.066406 59.730468 0 59.730468 0s23.808594 59.5625-8.191406 104.023437zm0 0"
                className="white"
              />
              <path
                d="m427.929688 152.949219c41.816406-28.925781 49.324218-93.523438 50.261718-126.804688.160156-5.214843-2.074218-10.214843-6.066406-13.574219-3.992188-3.359374-9.300781-4.707031-14.410156-3.664062-35.234375 6.40625-68.761719 20.019531-98.484375 39.988281-5.542969 3.921875-12.910157 4.089844-18.621094.417969-24.984375-16.96875-54.34375-26.347656-84.539063-27.007812-30.195312.660156-59.554687 10.039062-84.539062 27.007812-5.710938 3.671875-13.078125 3.503906-18.621094-.417969-29.722656-19.96875-63.25-33.582031-98.484375-39.988281-5.109375-1.042969-10.417969.304688-14.410156 3.664062-3.992187 3.359376-6.226563 8.359376-6.066406 13.574219.9375 33.28125 8.445312 97.878907 50.257812 126.804688"
                className="light"
              />
              <path
                d="m179.015625 44.746094c-5.542969 3.414062-10.820313 7.234375-15.789063 11.4375l-27.648437 23.125c-3.585937 2.960937-6.980469 6.152344-10.152344 9.554687-16.558593 18.195313-30.070312 38.941407-40.023437 61.441407-.425782.9375-.765625 1.792968-1.195313 2.644531-41.8125-28.925781-49.320312-93.523438-50.257812-126.804688-.160157-5.214843 2.074219-10.214843 6.066406-13.574219 3.992187-3.359374 9.300781-4.707031 14.410156-3.664062 35.246094 6.371094 68.78125 20 98.476563 40.023438 5.53125 3.921874 12.894531 4.09375 18.601562.425781 2.476563-1.621094 4.949219-3.15625 7.511719-4.609375zm0 0"
                className="white"
              />
              <path
                d="m478.191406 26.144531c-.9375 33.28125-8.445312 97.878907-50.261718 126.804688-.425782-.851563-.765626-1.707031-1.191407-2.644531-1.964843-4.691407-4.269531-9.386719-6.828125-14.164063-9.082031-17.0625-20.230468-32.9375-33.195312-47.277344-3.175782-3.402343-6.566406-6.59375-10.152344-9.554687l-27.648438-23.125c-3.996093-3.347656-8.183593-6.453125-12.546874-9.304688-.59375-.339844-1.109376-.765625-1.621094-1.109375.617187.261719 1.191406.605469 1.707031 1.027344 1.441406.769531 2.839844 1.625 4.183594 2.558594 5.707031 3.667969 13.070312 3.496093 18.601562-.425781 26.050781-17.671876 55.207031-30.265626 85.929688-37.121094 4.011719-1.023438 8.191406-1.960938 12.546875-2.902344 5.109375-1.042969 10.417968.304688 14.410156 3.664062 3.992188 3.359376 6.226562 8.359376 6.066406 13.574219zm0 0"
                className="light"
              />
              <path
                d="m452.335938 26.144531c-.765626 27.820313-6.144532 77.484375-32.425782 109.996094-9.082031-17.0625-20.230468-32.9375-33.195312-47.277344-3.175782-3.402343-6.566406-6.59375-10.152344-9.554687l-27.648438-23.125c-3.996093-3.347656-8.183593-6.453125-12.546874-9.304688 0-.046875.039062-.082031.085937-.082031 1.441406.769531 2.839844 1.625 4.183594 2.558594 5.707031 3.667969 13.070312 3.496093 18.601562-.425781 26.050781-17.671876 55.207031-30.265626 85.929688-37.121094 4.648437 3.269531 7.339843 8.65625 7.167969 14.335937zm0 0"
                className="white"
              />
              <path
                d="m290.203125 286.839844c0 18.847656-15.28125 34.132812-34.132813 34.132812-18.851562 0-34.132812-15.285156-34.132812-34.132812zm0 0"
                className="white"
              />
              <path
                d="m273.136719 218.570312s17.066406 0 42.667969 17.066407c25.597656 17.066406 85.332031 17.066406 85.332031-51.199219s-119.464844-68.265625-145.066407-68.265625c-25.601562 0-145.066406 0-145.066406 68.265625s59.734375 68.265625 85.332032 51.199219c25.601562-17.066407 42.667968-17.066407 42.667968-17.066407zm0 0"
                className="dim"
              />
              <path
                d="m187.804688 175.90625c0 9.425781-7.640626 17.066406-17.066407 17.066406s-17.066406-7.640625-17.066406-17.066406 7.640625-17.066406 17.066406-17.066406 17.066407 7.640625 17.066407 17.066406zm0 0"
                className="white"
              />
              <path
                d="m358.46875 175.90625c0 9.425781-7.640625 17.066406-17.066406 17.066406-9.425782 0-17.066406-7.640625-17.066406-17.066406s7.640624-17.066406 17.066406-17.066406c9.425781 0 17.066406 7.640625 17.066406 17.066406zm0 0"
                className="white"
              />
              <path
                d="m245.832031 248.609375-12.800781-13.652344c-6.324219-6.75-.308594-16.386719 10.238281-16.386719h25.601563c10.539062 0 16.554687 9.636719 10.238281 16.386719l-12.800781 13.652344c-5.730469 5.46875-14.746094 5.46875-20.476563 0zm0 0"
                className="medium"
              />
              <path
                d="m427.929688 152.949219h-25.34375c-.425782-.851563-.765626-1.707031-1.191407-2.644531-1.964843-4.691407-4.269531-9.386719-6.828125-14.164063-9.082031-17.0625-20.230468-32.9375-33.195312-47.277344-3.175782-3.402343-6.566406-6.59375-10.152344-9.554687l-27.648438-23.125c-3.996093-3.347656-8.183593-6.453125-12.546874-9.304688-.597657-.339844-1.023438-.679687-1.535157-1.023437-20.03125-12.457031-42.601562-20.273438-66.046875-22.867188 4.191406-.484375 8.410156-.714843 12.628906-.683593 27.910157.535156 55.140626 8.679687 78.761719 23.550781.511719.34375.941407.683593 1.535157 1.023437 4.363281 2.851563 8.550781 5.957032 12.546874 9.304688l27.648438 23.125c3.585938 2.960937 6.976562 6.152344 10.152344 9.554687 12.964844 14.339844 24.113281 30.214844 33.195312 47.277344 2.558594 4.777344 4.863282 9.472656 6.828125 14.164063.425781.9375.765625 1.792968 1.191407 2.644531zm0 0"
                className="regular"
              />
              <path
                d="m51.160156 278.304688c2.429688-.605469 4.820313-1.355469 7.183594-2.203126.519531-.1875 1.007812-.390624 1.511719-.585937 1.980469-.753906 3.917969-1.605469 5.808593-2.5625.351563-.160156.710938-.324219 1.042969-.492187 2.179688-1.117188 4.292969-2.351563 6.332031-3.703126.289063-.191406.546876-.386718.851563-.574218 2.054687-1.394532 4.019531-2.914063 5.882813-4.554688.109374-.09375.195312-.199218.304687-.292968 1.160156-1.046876 2.269531-2.148438 3.347656-3.277344.390625-.40625.757813-.851563 1.117188-1.21875.980469-1.09375 1.925781-2.210938 2.816406-3.414063.203125-.261719.382813-.519531.578125-.785156 2.070312-3.226563 3.960938-6.566406 5.667969-10l.074219-.101563.171874-.445312c-15.820312-.328125-30.984374-6.394531-42.667968-17.066406 0 0 32.710937-16.554688 58.652344-74.152344-41.816407-28.929688-49.324219-93.527344-50.261719-126.808594-.128907-5.695312 2.597656-11.078125 7.261719-14.351562-4.046876-.988282-8.074219-1.988282-12.382813-2.882813-5.109375-1.046875-10.417969.300781-14.410156 3.660157-3.992188 3.359374-6.226563 8.359374-6.070313 13.574218.9375 33.28125 8.449219 97.878906 50.261719 126.808594-14.5625 33.660156-41.703125 60.296875-75.628906 74.230469 11.796875 10.648437 27.023437 16.703125 42.914062 17.066406l-.164062.441406-.085938.105469c-1.917969 3.414062 2.277344 6.824219 0 10-.195312.265625-.375.519531-.578125.785156-.855468 1.167969-1.835937 2.285156-2.808594 3.414063-.367187.398437-.734374.851562-1.117187 1.21875-1.078125 1.128906-2.183594 2.226562-3.347656 3.277343l-.3125.289063c-1.863281 1.640625-3.828125 3.164063-5.882813 4.558594-.269531.1875-.535156.382812-.851562.570312-2.039063 1.351563-4.152344 2.589844-6.332032 3.703125l-1.039062.496094c-1.894531.929688-3.839844 1.765625-5.8125 2.558594-.511719.199218-1 .402344-1.519531.589844-2.347657.828124-4.734375 1.535156-7.152344 2.125 27.117187 8.515624 53.613281 18.882812 79.308594 31.027343 1.382812.683594 2.835937 1.535157 4.363281 2.492188.46875.296875.980469.648437 1.457031.972656 1.109375.726563 2.226563 1.476563 3.414063 2.3125l1.828125 1.324219c1.226562.851562 2.457031 1.789062 3.769531 2.769531l2.347656 1.769531"
                className="white"
              />
              <path
                d="m80.675781 287.734375c8.410157 4.957031 16.449219 10.527344 24.046875 16.65625 7.304688 5.46875 14.617188 10.691406 22.1875 15.480469 15.027344 9.582031 31.179688 17.273437 48.09375 22.894531 26.203125 8.351563 53.5625 12.515625 81.066406 12.339844v17.066406c-29.34375.179687-58.53125-4.277344-86.484374-13.210937-18.21875-6.0625-35.621094-14.347657-51.816407-24.667969-8.0625-5.121094-15.804687-10.640625-23.296875-16.257813-6.800781-5.457031-13.953125-10.460937-21.410156-14.984375zm0 0"
                className="white"
              />
              <g className="dark">
                <path d="m137.457031 326.210938c-1.910156-1.085938-4.167969-1.390626-6.296875-.851563l-1.519531.585937c-.523437.246094-1.011719.558594-1.449219.929688-.460937.292969-.875.648438-1.230468 1.058594-.375.429687-.722657.886718-1.03125 1.367187-1.152344 1.945313-1.5 4.269531-.964844 6.46875.328125 1.097657.867187 2.125 1.585937 3.019531 2.175781 2.808594 5.839844 4.015626 9.257813 3.046876 1.074218-.351563 2.066406-.910157 2.917968-1.648438.863282-.703125 1.578126-1.574219 2.101563-2.558594.988281-2.019531 1.210937-4.332031.632813-6.503906-.679688-2.078125-2.105469-3.828125-4.003907-4.914062zm0 0" />
                <path d="m511.839844 225.160156c-.671875-2.875-2.78125-5.199218-5.582032-6.144531-29.394531-12.449219-53.363281-35.003906-67.574218-63.589844 39.320312-32.359375 47.070312-94.039062 48.050781-129.042969.21875-7.8125-3.144531-15.292968-9.128906-20.320312-5.984375-5.023438-13.933594-7.039062-21.589844-5.476562-36.382813 6.664062-71.003906 20.738281-101.71875 41.34375-2.695313 1.90625-6.273437 1.988281-9.054687.214843-26.378907-17.835937-57.335938-27.683593-89.171876-28.375-31.835937.691407-62.796874 10.539063-89.171874 28.375-2.78125 1.773438-6.359376 1.691407-9.054688-.214843-30.703125-20.613282-65.316406-34.699219-101.691406-41.375-7.664063-1.570313-15.625.453124-21.609375 5.488281-5.988281 5.035156-9.34375 12.53125-9.113281 20.347656.972656 34.960937 8.722656 96.609375 48.027343 129.035156-14.183593 28.59375-38.152343 51.152344-67.550781 63.582031-2.804688.933594-4.929688 3.253907-5.609375 6.132813s.179687 5.90625 2.273437 7.996094c9.78125 9.019531 21.792969 15.265625 34.789063 18.101562-7.902344 9.511719-18.75 16.117188-30.828125 18.773438-4.214844 1.015625-6.996094 5.035156-6.4648438 9.335937.5273438 4.304688 4.2031248 7.527344 8.5390628 7.492188 22.371093.882812 44.320312 6.402344 64.449219 16.210937 9.207031 5.828125 18.101562 12.136719 26.640624 18.902344 1.839844 1.335937 4.132813 1.882813 6.375 1.519531 2.242188-.363281 4.25-1.601562 5.574219-3.449218 2.65625-3.816407 1.816407-9.050782-1.902343-11.84375-9.273438-7.378907-18.984376-14.1875-29.082032-20.386719-13.292968-6.546875-27.367187-11.363281-41.882812-14.335938 9.207031-6.738281 16.335937-15.933593 20.566406-26.53125.886719-2.605469.464844-5.476562-1.136719-7.71875-1.601562-2.238281-4.183593-3.566406-6.9375-3.570312-9.015625-.101563-17.859375-2.46875-25.71875-6.886719 29.414063-16.035156 52.714844-41.335938 66.277344-71.96875.351563-.691406.65625-1.390625.972656-2.105469l.445313-1.015625c10.542968-23.683594 25.136718-45.339844 43.128906-64 0 0 .050781-.105468.09375-.148437.039062-.042969.09375-.058594.136719-.101563.304687-.425781.566406-.886718.78125-1.363281.332031-.445313.617187-.921875.855469-1.417969.152343-.539062.246093-1.09375.28125-1.65625.121093-.515625.1875-1.039062.203124-1.570312-.0625-.546875-.179687-1.085938-.347656-1.613282-.085937-.527343-.222656-1.046874-.402344-1.550781-.28125-.507812-.617187-.988281-.996093-1.425781-.246094-.433594-.53125-.839844-.855469-1.21875 0 0-.09375-.050781-.136719-.085938-.042969-.035156-.058593-.101562-.101562-.136718-16.21875-14.597656-35.976563-24.699219-57.308594-29.296875-4.621094-.941407-9.128906 2.039062-10.070313 6.65625-.941406 4.621093 2.039063 9.128906 6.65625 10.070312 15.542969 3.304688 30.128907 10.09375 42.667969 19.855469-14.707031 16.476562-27.082031 34.882812-36.789062 54.71875-32.546875-30.253906-37.863281-88.484375-38.5625-113.425781-.074219-2.652344 1.074219-5.191407 3.113281-6.886719 1.964844-1.660156 4.585938-2.324219 7.101562-1.800781 34.070313 6.199219 66.503907 19.335937 95.28125 38.597656 8.398438 5.882813 19.511719 6.128906 28.160157.621094 23.628906-16.050781 51.378906-24.953125 79.933593-25.640625 28.546876.691406 56.285157 9.59375 79.90625 25.640625 8.648438 5.507812 19.761719 5.261719 28.160157-.621094 28.78125-19.265625 61.222656-32.398437 95.300781-38.589844 2.519531-.542969 5.148438.117188 7.105469 1.792969 2.027343 1.679688 3.175781 4.195312 3.117187 6.828125-.699218 24.984375-5.972656 83.214844-38.554687 113.492187-9.703125-19.835937-22.078125-38.246093-36.777344-54.726562 12.535156-9.761719 27.125-16.550781 42.664063-19.855469 3.0625-.527343 5.597656-2.675781 6.617187-5.609375s.363281-6.1875-1.710937-8.5c-2.074219-2.3125-5.238282-3.3125-8.265626-2.617187-21.328124 4.597656-41.082031 14.6875-57.300781 29.277343-.042969 0-.0625.09375-.105469.136719-.042968.042969-.101562.042969-.136718.085938-.320313.378906-.605469.789062-.851563 1.222656-.382812.4375-.714843.914063-1 1.421875-.179687.507812-.3125 1.027344-.398437 1.554688-.171875.523437-.289063 1.066406-.351563 1.613281.019531.527343.085938 1.054687.207031 1.570312.03125.558594.125 1.113281.28125 1.65625.238282.496094.523438.972657.851563 1.414063.21875.480468.480469.9375.785156 1.367187.042969.042969.101563.058594.136719.101563.035156.042968.050781.101562.09375.144531 18.03125 18.714844 32.652344 40.4375 43.195312 64.1875l.375.855469c.316407.714844.625 1.414062.855469 1.78125 13.5625 30.765625 36.894531 56.195312 66.378907 72.347656-7.882813 4.402344-16.75 6.75-25.777344 6.824219-2.742188 0-5.320313 1.320312-6.925782 3.542969-1.601562 2.226562-2.039062 5.085937-1.171874 7.6875 4.226562 10.601562 11.351562 19.792968 20.5625 26.53125-14.511719 2.96875-28.585938 7.785156-41.871094 14.335937-7.070313 3.960937-13.785156 8.527344-20.0625 13.652344-43.589844 36.082031-98.765625 55.160156-155.332032 53.71875-27.503906.175781-54.863281-3.988281-81.066406-12.339844-2.644531-.71875-5.121094-1.867187-7.679687-2.78125-4.378907-1.492187-9.167969.652344-10.964844 4.914063-.890625 2.121093-.863281 4.519531.074219 6.621093.941406 2.101563 2.707031 3.71875 4.882812 4.472657 2.78125.988281 5.476563 2.21875 8.328125 3.003906 27.9375 8.914062 57.101563 13.359375 86.425781 13.175781 60.304688 1.582031 119.140626-18.726563 165.625-57.171875 5.476563-4.429688 11.289063-8.425781 17.390626-11.949219 20.140624-9.769531 42.082031-15.289062 64.449218-16.210937 4.308594-.007813 7.9375-3.21875 8.460938-7.496094.527344-4.273438-2.214844-8.269531-6.394532-9.316406-12.074218-2.65625-22.921874-9.261719-30.820312-18.773438 12.996094-2.835937 25-9.082031 34.78125-18.097656 2.09375-2.089844 2.957031-5.117188 2.277344-7.996094zm0 0" />
                <path d="m196.335938 192.972656c.003906-2.292968-.917969-4.488281-2.558594-6.085937 1.667968-3.421875 2.542968-7.175781 2.558594-10.980469 0-14.140625-11.460938-25.601562-25.597657-25.601562-14.140625 0-25.601562 11.460937-25.601562 25.601562.015625 3.804688.890625 7.558594 2.558593 10.980469-2.46875 2.429687-3.222656 6.105469-1.914062 9.3125s4.425781 5.300781 7.890625 5.304687h34.132813c4.710937 0 8.53125-3.820312 8.53125-8.53125zm-25.597657-25.601562c4.710938 0 8.53125 3.820312 8.53125 8.535156 0 4.710938-3.820312 8.53125-8.53125 8.53125-4.714843 0-8.535156-3.820312-8.535156-8.53125 0-4.714844 3.820313-8.535156 8.535156-8.535156zm0 0" />
                <path d="m315.804688 192.972656c0 4.710938 3.820312 8.53125 8.53125 8.53125h34.132812c3.464844-.003906 6.582031-2.097656 7.890625-5.304687s.554687-6.882813-1.914063-9.3125c1.667969-3.421875 2.542969-7.175781 2.558594-10.980469 0-14.140625-11.460937-25.601562-25.601562-25.601562-14.136719 0-25.597656 11.460937-25.597656 25.601562.015624 3.804688.890624 7.558594 2.558593 10.980469-1.640625 1.597656-2.5625 3.792969-2.558593 6.085937zm25.597656-25.601562c4.714844 0 8.535156 3.820312 8.535156 8.535156 0 4.710938-3.820312 8.53125-8.535156 8.53125-4.710938 0-8.53125-3.820312-8.53125-8.53125 0-4.714844 3.820312-8.535156 8.53125-8.535156zm0 0" />
                <path d="m221.9375 278.304688c-4.714844 0-8.535156 3.820312-8.535156 8.535156 0 23.5625 19.105468 42.664062 42.667968 42.664062s42.667969-19.101562 42.667969-42.664062c0-4.714844-3.820312-8.535156-8.535156-8.535156zm34.132812 34.132812c-10.847656-.011719-20.511718-6.84375-24.140624-17.066406h48.28125c-3.628907 10.222656-13.296876 17.054687-24.140626 17.066406zm0 0" />
                <path d="m201.074219 242.738281c6.628906-4.488281 13.71875-8.261719 21.144531-11.257812.570312 3.496093 2.171875 6.738281 4.597656 9.3125l12.800782 13.652343c9.101562 9.0625 23.820312 9.0625 32.921874 0l12.800782-13.652343c2.425781-2.574219 4.027344-5.8125 4.597656-9.300781 7.429688 2.984374 14.519531 6.753906 21.148438 11.246093 11.453124 7.210938 24.726562 11 38.261718 10.921875 10.234375.113282 20.335938-2.300781 29.414063-7.023437 14.089843-7.585938 30.910156-24.472657 30.910156-62.199219 0-35.039062-26.652344-76.800781-153.601563-76.800781-126.949218 0-153.601562 41.761719-153.601562 76.800781 0 37.726562 16.820312 54.613281 30.925781 62.199219 9.078125 4.722656 19.183594 7.136719 29.414063 7.023437 13.535156.078125 26.808594-3.710937 38.265625-10.921875zm59 .042969c-2.390625 1.726562-5.617188 1.726562-8.007813 0l-13.0625-13.859375c.101563-.402344 1.375-1.816406 4.265625-1.816406h25.601563c2.910156 0 4.179687 1.414062 4 2.011719zm-118.613281-11.1875c-14.347657-7.679688-21.925782-23.980469-21.925782-47.15625 0-51.976562 85.539063-59.734375 136.535156-59.734375 50.996094 0 136.535157 7.757813 136.535157 59.734375 0 23.175781-7.578125 39.476562-21.914063 47.15625-16.152344 7.574219-35.042968 6.421875-50.152344-3.054688-26.972656-17.980468-45.386718-18.5-47.402343-18.5-.578125.050782-1.152344.164063-1.707031.339844-.847657-.160156-1.699219-.273437-2.558594-.339844h-25.601563c-.859375.066407-1.714843.179688-2.558593.339844-.554688-.171875-1.128907-.289062-1.707032-.339844-2.015625 0-20.429687.519532-47.402344 18.5-15.109374 9.484376-34.003906 10.636719-50.152343 3.054688zm0 0" />
              </g>
            </svg>
            <span>{post.likes.count}</span>
          </div>
        ) : null}
      </div>
    );
  };
  renderAttachments = (data: IAttachment[]) => {
    let audio = this.renderAudios(data.filter(item =>
      item.type === AttachmentType.audio ? item : null
    ) as {
      type: AttachmentType.audio;
      audio: IAudioAttachment;
    }[]);
    let photos = this.renderPhotos(data.filter(item =>
      item.type === AttachmentType.photo ? item : null
    ) as {
      type: AttachmentType.photo;
      photo: IPhotoAttachment;
    }[]);
    return [photos, audio];
  };
  renderPhotos = (
    photos: { type: AttachmentType.photo; photo: IPhotoAttachment }[]
  ) => {
    let self = this;
    switch (photos.length) {
      case 1:
      case 2:
      case 3:
      case 4: {
        let left = 1,
          right = 0,
          maxHeight: number | null = photos[0].photo.sizes[photos[0].photo.sizes.length - 1].height;
        switch (photos.length) {
          case 2:
            {
              right = 1;
            }
            break;
          case 3:
            {
              right = 2;
            }
            break;
          case 4:
            {
              maxHeight = null;
              left = right = 2;
            }
            break;
          default:
            break;
        }
        return (
          <table key="table" className="photo-attachment">
            <tbody>
              <tr style={{
                maxHeight: maxHeight ? maxHeight : 'fit-content'
              }}>

                <td key="left-column" style={{ flex: 2 / left }}>
                  {(function () {
                    let nodes = [];
                    for (let i = 0; i < left; i++) {
                      let photo = photos[i * left].photo;
                      nodes.push(
                        <img
                          key={photo.id}
                          src={photo.sizes[photo.sizes.length - 1].url}
                          onClick={self.onPictureClick}
                        />
                      );
                    }
                    return nodes;
                  })()}
                </td>
                {right > 0 ? (
                  <td key="right-column" style={{ flex: 2 / right }}>
                    {(function () {
                      let nodes = [];
                      for (let i = 0; i < right; i++) {
                        let photo = photos[i * left + 1].photo;
                        nodes.push(
                          <img
                            key={photo.id}
                            src={photo.sizes[photo.sizes.length - 1].url}
                            onClick={self.onPictureClick}
                          />
                        );
                      }
                      return nodes;
                    })()}
                  </td>
                ) : null}
              </tr>
            </tbody>
          </table>
        );
      }
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10: {
        let up = 2,
          down = 3;
        switch (photos.length) {
          case 6:
            {
              up = 3;
            }
            break;
          case 7:
            {
              up = 3;
              down = 4;
            }
            break;
          case 8:
            {
              up = 4;
              down = 4;
            }
            break;
          case 9:
            {
              up = 2;
              down = 7;
            }
            break;
          case 10:
            {
              up = 2;
              down = 8;
            }
            break;
          default:
            break;
        }
        return (
          <table key="table" className="photo-attachment">
            <tbody>
              <tr>
                {(function () {
                  let nodes = [];
                  for (let i = 0; i < up; i++) {
                    let photo = photos[i].photo;
                    let pic = photo.sizes[photo.sizes.length - 1];
                    nodes.push(
                      <td key={`up${i}`}>
                        <img
                          key={photo.access_key}
                          src={photo.sizes[photo.sizes.length - 1].url}
                          onClick={self.onPictureClick}
                        />
                      </td>
                    );
                  }
                  return nodes;
                })()}
              </tr>
              <tr>
                {(function () {
                  let nodes = [];
                  for (let i = 0; i < down; i++) {
                    let photo = photos[up + i].photo;
                    let pic = photo.sizes[photo.sizes.length - 1];
                    nodes.push(
                      <td key={`down${i}`}>
                        <img
                          key={photo.access_key}
                          src={pic.url}
                          onClick={self.onPictureClick}
                        />
                      </td>
                    );
                  }
                  return nodes;
                })()}
              </tr>
            </tbody>
          </table>
        );
      }
      default:
        return null;
    }
  };
  onPictureClick = (e: React.MouseEvent<HTMLImageElement>) => {
    e.preventDefault();
    log("Clicked on picture", e.target);
  };
  renderAudios = (
    audios: { type: AttachmentType.audio; audio: IAudioAttachment }[]
  ) => {
    if (audios.length === 0) return null;
    return (
      <div key="audio-list" className="audio-list">
        {audios.map(({ audio }) => {
          return (
            <div key={audio.id} className="track">
              <span className="fa fa-play" />
              <div className="track-info">
                <h1 className="track-title">{audio.title}</h1>
                <p className="track-artist">{audio.artist}</p>
              </div>
            </div>
          );
        })}
      </div>
    );
  };
}

export default Post;
